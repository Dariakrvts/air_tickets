{"ast":null,"code":"import flightsData from '@/data/FlyTickets.json';\nexport default {\n  data() {\n    return {\n      selectedRow: null,\n      optionsFrom: flightsData.map(flight => flight.from),\n      // Опции для выбора пункта отправления\n      optionsTo: flightsData.map(flight => flight.to),\n      // Опции для выбора пункта прибытия\n      flightsData: [],\n      waybillFrom: true,\n      // Показывать блок для выбора пункта отправления\n      waybillTo: true,\n      // Показывать блок для выбора пункта прибытия\n      flightsVisible: true,\n      // Показывать таблицу с рейсами\n      valueFrom: [],\n      // Выбранный пункт отправления\n      valueTo: [],\n      // Выбранный пункт прибытия\n      valueDateFrom: null,\n      // Выбранная дата отправления\n      valueDateTo: null,\n      // Выбранная дата прибытия\n      showFrom: true,\n      // Показывать поле для выбора даты отправления\n      showTo: true,\n      // Показывать поле для выбора даты прибытия\n      options: ['Одна', 'Дві', 'Три', 'Чотири', \"П'ять\", 'Шість'],\n      // Опции для выбора количества пассажиров\n      valueSingle: '',\n      // Выбранное количество пассажиров\n      flights: [],\n      // Рейсы\n      showToColumn: true // Показывать столбец с пунктом прибытия в таблице\n    };\n  },\n\n  mounted() {\n    this.flights = flightsData; // Загружаем данные о рейсах\n  },\n\n  methods: {\n    handleClickshowTo() {\n      this.showTo = false; // Скрыть поле для выбора даты прибытия\n      this.waybillTo = false; // Скрыть блок для выбора пункта прибытия\n      this.showToColumn = false; // Скрыть столбец с пунктом прибытия в таблице\n      this.valueFrom = []; // Сбросить выбранный пункт отправления\n      this.valueTo = []; // Сбросить выбранный пункт прибытия\n      this.valueDateTo = null; // Сбросить выбранную дату прибытия\n      this.valueDateFrom = null; // Сбросить выбранную дату прибытия\n    },\n\n    handleClickshowFrom() {\n      this.showTo = true; // Показать поле для выбора даты прибытия\n      this.waybillTo = true; // Показать блок для выбора пункта прибытия\n      this.showToColumn = true; // Показать столбец с пунктом прибытия в таблице\n      // this.valueDateTo = null; // Сбросить выбранную дату прибытия\n    },\n\n    handleFlightTypeChange() {\n      // Очистить значения селектов и даты\n\n      this.selectedFrom = '';\n      this.selectedTo = '';\n      this.selectedDate = null;\n    },\n    reverseSelection() {\n      [this.valueFrom, this.valueTo] = [this.valueTo, this.valueFrom]; // Поменять выбранные пункты отправления и прибытия местами\n    },\n\n    searchFlights() {\n      this.flightsVisible = true; // Показать таблицу с рейсами\n      this.flights = flightsData.filter(flight => {\n        return (\n          // this.valueFrom.includes(flight.from) && // Фильтрация по выбранному пункту отправления\n          // this.valueTo.includes(flight.to) && // Фильтрация по выбранному пункту прибытия\n          this.matchesSelectedDate(flight.departure) // Фильтрация по выбранной дате отправления\n        );\n      });\n    },\n\n    matchesSelectedDate(flightDeparture) {\n      if (!this.valueDateFrom && !this.valueDateTo) {\n        return true; // Если дата не выбрана, показываем все рейсы\n      }\n      // const twoFlyTickets = this.flights.filter(flight => flight.type === 'two-way');\n      const selectedDateFrom = this.valueDateFrom ? new Date(this.valueDateFrom) : null; // Преобразуем выбранную дату отправления в объект Date\n      const selectedDateTo = this.valueDateTo ? new Date(this.valueDateTo) : null; // Преобразуем выбранную дату прибытия в объект Date\n      const flightDate = new Date(flightDeparture); // Преобразуем дату отправления рейса в объект Date\n\n      if (selectedDateFrom && selectedDateTo) {\n        // Если выбраны обе даты\n        return flightDate >= selectedDateFrom && flightDate <= selectedDateTo;\n      } else if (selectedDateFrom) {\n        // Если выбрана только дата отправления\n        return flightDate >= selectedDateFrom;\n      } else if (selectedDateTo) {\n        // Если выбрана только дата прибытия\n        return flightDate <= selectedDateTo;\n      }\n      return true;\n    },\n    formatDate(date) {\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      }; // Опции форматирования даты\n      return new Intl.DateTimeFormat('en-US', options).format(new Date(date)); // Форматирование даты в формат \"день.месяц.год\"\n    }\n  },\n\n  name: 'HomeView' // Название компонента\n};","map":{"version":3,"names":["flightsData","data","selectedRow","optionsFrom","map","flight","from","optionsTo","to","waybillFrom","waybillTo","flightsVisible","valueFrom","valueTo","valueDateFrom","valueDateTo","showFrom","showTo","options","valueSingle","flights","showToColumn","mounted","methods","handleClickshowTo","handleClickshowFrom","handleFlightTypeChange","selectedFrom","selectedTo","selectedDate","reverseSelection","searchFlights","filter","matchesSelectedDate","departure","flightDeparture","selectedDateFrom","Date","selectedDateTo","flightDate","formatDate","date","day","month","year","Intl","DateTimeFormat","format","name"],"sources":["C:\\Users\\Dasha\\Desktop\\practice\\air_tickets\\air_tickets-client\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <main class=\"AppNavigationHome\">\r\n    <div class=\"main__container md12\">\r\n      <div class=\"main__navigation md12\">\r\n\r\n        <va-button class=\"btn-way md9\" @change=\"handleFlightTypeChange\" @click.stop=\"handleClickshowFrom()\"> Туди й назад </va-button>\r\n        <va-button class=\"btn-way md9\" @change=\"handleFlightTypeChange\" @click.stop=\"handleClickshowTo()\"> Односторонній </va-button>\r\n      </div>\r\n\r\n      <div class=\"path\">\r\n        <div class=\"main__waybillFrom\" v-if=\"waybillFrom\">\r\n          <div>\r\n            <va-select v-model=\"valueFrom\" label=\"\" :options=\"optionsFrom\" searchable highlight-matched-text />\r\n          </div>\r\n        </div>\r\n        <div class=\"btm-revers\" v-show=\"showTo\">\r\n          <va-button round icon=\"cached\" @click=\"reverseSelection()\"></va-button>\r\n        </div>\r\n        <div class=\"main__waybillTo\" v-if=\"waybillTo\">\r\n          <div>\r\n            <va-select v-model=\"valueTo\" label=\"\" :options=\"optionsTo\" searchable highlight-matched-text />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btn__info\">\r\n        <div class=\"row justify-space-between\">\r\n          <div class=\"date flex flex-col xs12\">\r\n            <va-date-input v-if=\"showFrom\" class=\"date__input\" label=\"Дата отправления\" v-model=\"valueDateFrom\" stateful\r\n              clearable :min-date=\"minDate\" :max-date=\"maxDate\" />\r\n          </div>\r\n          <div class=\"date flex flex-col xs12\">\r\n            <va-date-input v-if=\"showTo\" class=\"date__input\" label=\"Дата прибытия\" v-model=\"valueDateTo\" stateful\r\n              clearable :min-date=\"minDate\" :max-date=\"maxDate\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"price\">\r\n          <va-select v-model=\"valueSingle\" class=\"sm12\" label=\"кількість осіб\" :options=\"options\" />\r\n        </div>\r\n        <div class=\"scan sm12\">\r\n          <va-button size=\"medium\" class=\"px-6\" @click=\"searchFlights\">Пошук рейсов</va-button>\r\n        </div>\r\n        <div class=\"tabel__tickets\" v-if=\"flightsVisible\">\r\n          <table class=\"va-table va-table--striped  va-table--clickable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Звідки</th>\r\n                <th v-if=\"showToColumn\">Куди</th>\r\n                <th>Ціна</th>\r\n                <th>Дата</th>\r\n              </tr>\r\n            </thead>\r\n            <tr v-for=\"flight in flights\" :key=\"flight.from\" class=\"tr\">\r\n              <td>{{ flight.from }}</td>\r\n              <td v-if=\"showToColumn\">{{ flight.to }}</td>\r\n              <td>{{ flight.price }}</td>\r\n              <td>{{ flight.departure }}</td>\r\n            </tr>\r\n          </table>\r\n          <div class=\"error\">\r\n            <div v-if=\"valueFrom.length === 0 || valueTo.length === 0\" class=\"error\">\r\n              <!-- Рейсів не знайдено. Будь ласка вкажіть шлях та дату. -->\r\n            </div>\r\n            <div v-else class=\"error\">\r\n              <!-- Всі можливі рейси -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport flightsData from '@/data/FlyTickets.json';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      \r\n      selectedRow: null,\r\n      optionsFrom: flightsData.map(flight => flight.from), // Опции для выбора пункта отправления\r\n      optionsTo: flightsData.map(flight => flight.to), // Опции для выбора пункта прибытия\r\n      flightsData: [],\r\n      waybillFrom: true, // Показывать блок для выбора пункта отправления\r\n      waybillTo: true, // Показывать блок для выбора пункта прибытия\r\n      flightsVisible: true, // Показывать таблицу с рейсами\r\n      valueFrom: [], // Выбранный пункт отправления\r\n      valueTo: [], // Выбранный пункт прибытия\r\n      valueDateFrom: null, // Выбранная дата отправления\r\n      valueDateTo: null, // Выбранная дата прибытия\r\n      showFrom: true, // Показывать поле для выбора даты отправления\r\n      showTo: true, // Показывать поле для выбора даты прибытия\r\n      options: ['Одна', 'Дві', 'Три', 'Чотири', \"П'ять\", 'Шість'], // Опции для выбора количества пассажиров\r\n      valueSingle: '', // Выбранное количество пассажиров\r\n      flights: [], // Рейсы\r\n      showToColumn: true, // Показывать столбец с пунктом прибытия в таблице\r\n    };\r\n  },\r\n  mounted() {\r\n    this.flights = flightsData; // Загружаем данные о рейсах\r\n  },\r\n  methods: {\r\n    handleClickshowTo() {\r\n      this.showTo = false; // Скрыть поле для выбора даты прибытия\r\n      this.waybillTo = false; // Скрыть блок для выбора пункта прибытия\r\n      this.showToColumn = false; // Скрыть столбец с пунктом прибытия в таблице\r\n      this.valueFrom = []; // Сбросить выбранный пункт отправления\r\n      this.valueTo = []; // Сбросить выбранный пункт прибытия\r\n      this.valueDateTo = null; // Сбросить выбранную дату прибытия\r\n      this.valueDateFrom = null; // Сбросить выбранную дату прибытия\r\n    },\r\n    handleClickshowFrom() {\r\n      this.showTo = true; // Показать поле для выбора даты прибытия\r\n      this.waybillTo = true; // Показать блок для выбора пункта прибытия\r\n      this.showToColumn = true; // Показать столбец с пунктом прибытия в таблице\r\n      // this.valueDateTo = null; // Сбросить выбранную дату прибытия\r\n    },\r\n    handleFlightTypeChange() {\r\n    // Очистить значения селектов и даты\r\n    \r\n    this.selectedFrom = '';\r\n    this.selectedTo = '';\r\n    this.selectedDate = null;\r\n  },\r\n    reverseSelection() {\r\n      [this.valueFrom, this.valueTo] = [this.valueTo, this.valueFrom]; // Поменять выбранные пункты отправления и прибытия местами\r\n    },\r\n\r\n    searchFlights() {\r\n      this.flightsVisible = true; // Показать таблицу с рейсами\r\n      this.flights = flightsData.filter(flight => {\r\n        return (\r\n          // this.valueFrom.includes(flight.from) && // Фильтрация по выбранному пункту отправления\r\n          // this.valueTo.includes(flight.to) && // Фильтрация по выбранному пункту прибытия\r\n          this.matchesSelectedDate(flight.departure) // Фильтрация по выбранной дате отправления\r\n        );\r\n      });\r\n    },\r\n    matchesSelectedDate(flightDeparture) {\r\n      if (!this.valueDateFrom && !this.valueDateTo) {\r\n        return true; // Если дата не выбрана, показываем все рейсы\r\n      }\r\n      // const twoFlyTickets = this.flights.filter(flight => flight.type === 'two-way');\r\n      const selectedDateFrom = this.valueDateFrom ? new Date(this.valueDateFrom) : null; // Преобразуем выбранную дату отправления в объект Date\r\n      const selectedDateTo = this.valueDateTo ? new Date(this.valueDateTo) : null; // Преобразуем выбранную дату прибытия в объект Date\r\n      const flightDate = new Date(flightDeparture); // Преобразуем дату отправления рейса в объект Date\r\n\r\n      if (selectedDateFrom && selectedDateTo) {\r\n        // Если выбраны обе даты\r\n        return flightDate >= selectedDateFrom && flightDate <= selectedDateTo;\r\n      } else if (selectedDateFrom) {\r\n        // Если выбрана только дата отправления\r\n        return flightDate >= selectedDateFrom;\r\n      } else if (selectedDateTo) {\r\n        // Если выбрана только дата прибытия\r\n        return flightDate <= selectedDateTo;\r\n      }\r\n      return true;\r\n    },\r\n    formatDate(date) {\r\n      const options = { day: '2-digit', month: '2-digit', year: 'numeric' }; // Опции форматирования даты\r\n      return new Intl.DateTimeFormat('en-US', options).format(new Date(date)); // Форматирование даты в формат \"день.месяц.год\"\r\n    },\r\n  },\r\n  name: 'HomeView' // Название компонента\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.AppNavigationHome {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  /* background-color: #000; */\r\n}\r\n\r\n.main__container {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.main__navigation {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n\r\n}\r\n\r\n.btn-way {\r\n  flex: 50%;\r\n  width: 160px;\r\n  gap: 20px;\r\n}\r\n\r\n.main__waybillFrom {\r\n  margin-bottom: 0;\r\n  margin-top: 20px;\r\n}\r\n\r\n.main__waybillTo {\r\n  margin-top: -8px;\r\n}\r\n\r\n.path {\r\n  position: relative;\r\n}\r\n\r\n.btm-revers {\r\n  position: absolute;\r\n  top: 34px;\r\n  left: 208px;\r\n  z-index: 99;\r\n}\r\n\r\n.btn__info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n\r\n.date {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  gap: 15px;\r\n  flex: 100%;\r\n  width: 120px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.date__input {\r\n  flex: 1 1 50%;\r\n}\r\n\r\n.price {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n\r\n.scan {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n}\r\n\r\n.va-button {\r\n  width: 100%;\r\n}\r\n\r\n.va-dropdown__content {\r\n  z-index: 99;\r\n}\r\n\r\n.tabel__tickets {\r\n  box-shadow: 0px 4px 6px rgba(52, 61, 215, 0.397);\r\n  overflow: auto;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}