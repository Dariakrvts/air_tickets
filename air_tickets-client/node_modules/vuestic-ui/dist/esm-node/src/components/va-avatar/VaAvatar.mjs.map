{"version":3,"file":"VaAvatar.mjs","sources":["../../../../../src/components/va-avatar/VaAvatar.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-avatar\"\n    :class=\"classesComputed\"\n    :style=\"computedStyle\"\n    :aria-hidden=\"!$props.src\"\n    aria-live=\"polite\"\n  >\n    <va-progress-circle\n      v-if=\"$props.loading\"\n      :size=\"sizeComputed\"\n      :color=\"colorComputed\"\n      indeterminate\n    />\n    <slot v-bind=\"avatarOptions\" v-else>\n      <img\n        v-if=\"$props.src && !hasLoadError\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n        @error=\"onLoadError\"\n      >\n      <slot v-else-if=\"hasLoadError && $props.src\" name=\"fallback\">\n        <va-fallback v-bind=\"VaFallbackProps\" @fallback=\"$emit('fallback')\" />\n      </slot>\n      <va-icon\n        v-else-if=\"$props.icon\"\n        :name=\"$props.icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, computed } from 'vue'\nimport pick from 'lodash/pick'\n\nimport {\n  useBem,\n  useSize,\n  useColors,\n  useTextColor,\n  useSizeProps,\n  useLoadingProps,\n  useComponentPresetProp,\n} from '../../composables'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport { VaIcon, VaProgressCircle, VaFallback } from '../index'\nimport { useAvatarProps } from './hooks/useAvatarProps'\n\nconst VaFallbackProps = extractComponentProps(VaFallback)\n\nexport default defineComponent({\n  name: 'VaAvatar',\n\n  components: { VaIcon, VaProgressCircle, VaFallback },\n\n  props: {\n    ...useLoadingProps,\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    ...useAvatarProps,\n    ...VaFallbackProps,\n\n    src: { type: String, default: null },\n    icon: { type: String, default: '' },\n    alt: { type: String, default: '' },\n  },\n\n  emits: ['error', 'fallback'],\n\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const backgroundColorComputed = computed(() => {\n      if (props.loading || (props.src && !hasLoadError.value)) {\n        return 'transparent'\n      }\n\n      return colorComputed.value\n    })\n    const { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => ({\n      fontSize: props.fontSize || fontSizeComputed.value,\n    }))\n\n    const classesComputed = useBem('va-avatar', () => ({\n      ...pick(props, ['square']),\n    }))\n\n    const hasLoadError = ref(false)\n\n    const onLoadError = (event: Event) => {\n      hasLoadError.value = true\n      emit('error', event)\n    }\n\n    watch(() => props.src, () => {\n      hasLoadError.value = false\n    })\n\n    const avatarOptions = computed(() => ({\n      hasError: hasLoadError.value,\n      onError: onLoadError,\n    }))\n\n    return {\n      hasLoadError,\n      sizeComputed,\n      avatarOptions,\n      computedStyle,\n      colorComputed,\n      classesComputed,\n      textColorComputed,\n      backgroundColorComputed,\n      VaFallbackProps: filterComponentProps(VaFallbackProps),\n\n      onLoadError,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n  background-color: v-bind(backgroundColorComputed);\n  color: v-bind(textColorComputed);\n  width: v-bind(sizeComputed);\n  min-width: v-bind(sizeComputed);  // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n  height: v-bind(sizeComputed);\n\n  &--square {\n    --va-avatar-border-radius: 0;\n  }\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_createBlock","_renderSlot","_normalizeProps","_mergeProps","_openBlock","_createElementBlock","_createVNode"],"mappings":";;;;;;;;;6BACEA,iBA4BF,SAAA;;;;;IApBA,aAAA;AAAA,EAAA,GAAA;AAAA,wCACAC,YAAA,+BAAA;AAAA,MACA,KAAA;AAAA,MACA,MAAA,KAAA;AAAA,MAAA,OAAA,KAAA;AAAA,MAEA,eAcA;AAAA,IAAA,GAZA,MAAA,GAAA,CAAA,QAAA,OAAA,CAAA,KAAAC,WAAA,KAAA,QADA,WAKAC,eAAAC,WAAA,EAAA,KAAA,EAAA,GAAA,KAAA,aAAA,CAAA,GAAA,MAAA;AAAA,MAAA,KAAA,OAAA,OAAA,CAAA,KAAA,gBAAAC,UAAA,GAHAC,mBAAA,OAAA;AAAA,QACA,KAAA;AAAA,QACA,KAAA,KAAA,OAAA;AAAA,QAAA,KAAA,KAAA,OAAA;AAAA,QAEA,SAAA,OAAA,CAAA,MAAA,QAAA,IAAA,IAAA,SAAA,KAAA,eAAA,KAAA,YAAA,GAAA,IAAA;AAAA,MAAA,GAAA,MAEA,IAAA,UAAA,KAAA,KADA,gBAAA,KAAA,OAAA,MAAAJ,WAAA,KAAA,QAAA,YAAA,EAAA,KAAA,EAAA,GAAA,MAAA;AAAA,QAAAK,YAAA,wBAAAH,WAAA,KAAA,iBAAA;AAAA;QAGA,CAAA,GAAA,MAAA,EAAA;AAAA,MAAA,CAAA,IAAA,KAAA,OAAA,QAAAC,UACA,GAAAJ,YAAA,oBAAA;AAAA,QAAA,KAAA;AAAA;;;;;;"}