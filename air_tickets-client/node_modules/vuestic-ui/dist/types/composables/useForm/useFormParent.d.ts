import { type Ref } from 'vue';
import { Form, FormFiled } from './types';
declare type FormParentOptions = {
    hideLoading: boolean;
    hideErrors: boolean;
    hideErrorMessages: boolean;
};
export declare const createFormContext: <Names extends string>(options: FormParentOptions) => {
    fields: import("vue").ComputedRef<FormFiled<Names>[]>;
    doShowError: import("vue").ComputedRef<boolean>;
    doShowErrorMessages: import("vue").ComputedRef<boolean>;
    doShowLoading: import("vue").ComputedRef<boolean>;
    registerField: (uid: number, field: Ref<FormFiled>) => void;
    unregisterField: (uid: number) => void;
};
export declare const useFormParent: <Names extends string = string>(options: FormParentOptions) => Form<Names>;
export {};
